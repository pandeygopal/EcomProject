version: '3.8'

services:
  # Zookeeper (Required by Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shop-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"    # Cổng cho các dịch vụ bên trong Docker
      - "29092:29092"  # Cổng cho kết nối từ host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shop-network


  # Redis
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - shop-network

  # MySQL for Order Service
  mysql-order-service:
    image: mysql:8.0
    container_name: mysql-order-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order_db
    ports:
      - "3307:3306" # Host port 3307 mapped to container port 3306
    volumes:
      - mysql-order-service-data:/var/lib/mysql
    networks:
      - shop-network

  # MySQL for Identity Service
  mysql-identity-service:
    image: mysql:8.0
    container_name: mysql-identity-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
    ports:
      - "3308:3306" # Host port 3308 mapped to container port 3306
    volumes:
      - mysql-identity-service-data:/var/lib/mysql
    networks:
      - shop-network

  mysql-payment-service:
    image: mysql:8.0
    container_name: mysql-payment-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: payment_db
    ports:
      - "3309:3306" # Host port 3308 mapped to container port 3306
    volumes:
      - mysql-payment-service-data:/var/lib/mysql
    networks:
      - shop-network

  mysql-product-service:
    image: mysql:8.0
    container_name: mysql-product-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product_db
    ports:
      - "3310:3306" # Host port 3308 mapped to container port 3306
    volumes:
      - mysql-product-service-data:/var/lib/mysql
    networks:
      - shop-network

  mysql-stock-service:
    image: mysql:8.0
    container_name: mysql-stock-service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: stock_db
    ports:
      - "3311:3306" # Host port 3308 mapped to container port 3306
    volumes:
      - mysql-stock-service-data:/var/lib/mysql
    networks:
      - shop-network
  # Eureka Server
  eureka-server:
    image: springboot-kafka-microservices/eureka-server:latest
    container_name: eureka-server
    depends_on:
      - kafka
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network

  # API Gateway
  api-gateway:
    image: springboot-kafka-microservices/api-gateway:latest
    container_name: api-gateway
    depends_on:
      - kafka
      - eureka-server
    ports:
      - "9191:9191"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network

  # Order Service
  order-service:
    image: springboot-kafka-microservices/order-service:latest
    container_name: order-service
    depends_on:
      - kafka
      - mysql-order-service
      - eureka-server
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-order-service:3306/order_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network

  email-service:
    image: springboot-kafka-microservices/email-service:latest
    container_name: email-service
    depends_on:
      - kafka
      - eureka-server
    ports:
      - "8086:8086"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network

  payment-service:
    image: springboot-kafka-microservices/payment-service:latest
    container_name: payment-service
    depends_on:
      - kafka
      - mysql-payment-service
      - eureka-server
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-payment-service:3306/payment_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network

  product-service:
    image: springboot-kafka-microservices/product-service:latest
    container_name: product-service
    depends_on:
      - kafka
      - mysql-product-service
      - eureka-server
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-product-service:3306/product_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_TIMEOUT: 60000
    networks:
      - shop-network

  stock-service:
    image: springboot-kafka-microservices/stock-service:latest
    container_name: stock-service
    depends_on:
      - kafka
      - mysql-stock-service
      - eureka-server
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-stock-service:3306/stock_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network
  # Identity Service
  identity-service:
    image: springboot-kafka-microservices/identity-service:latest
    container_name: identity-service
    depends_on:
      - kafka
      - mysql-identity-service
      - eureka-server
    ports:
      - "9898:9898"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-identity-service:3306/user_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - shop-network

volumes:
  mysql-order-service-data:
  mysql-identity-service-data:
  mysql-product-service-data:
  mysql-payment-service-data:
  mysql-stock-service-data:
  redis-data:
networks:
  shop-network:
    driver: bridge
